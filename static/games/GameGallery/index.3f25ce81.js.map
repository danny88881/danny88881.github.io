{"mappings":"AAAA,iEAAiE,GACjE,IAAI,OAAO,WAAW,aAAa;IAC/B,KAAK,gBAAgB,CAAC,WAAW,IAAM,KAAK,WAAW;IACvD,KAAK,gBAAgB,CAAC,YAAY,CAAC,QAAU,MAAM,SAAS,CAAC,KAAK,OAAO,CAAC,KAAK;IAE/E,KAAK,gBAAgB,CAAC,WAAW,CAAC;QAC9B,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,cAC5B,KAAK,YAAY,CACZ,UAAU,GACV,IAAI,CAAC;YACF,OAAO,KAAK,OAAO,CAAC,QAAQ;QAChC,GACC,IAAI,CAAC,CAAA;YACF,QAAQ,OAAO,CAAC,CAAC,SAAW,OAAO,QAAQ,CAAC,OAAO,GAAG;QAC1D;IAEZ;IAEA,KAAK,gBAAgB,CAAC,SAAS,SAAU,KAAK;QAC1C,IAAI,MAAM,OAAO,CAAC,KAAK,KAAK,oBAAoB,MAAM,OAAO,CAAC,IAAI,KAAK,eACnE;QAGJ,MAAM,WAAW,CACb,MAAM,MAAM,OAAO,EACd,IAAI,CAAC,CAAC;YACH,IAAI,SAAS,MAAM,KAAK,GACpB,OAAO;YAGX,MAAM,aAAa,IAAI,QAAQ,SAAS,OAAO;YAC/C,WAAW,GAAG,CAAC,gCAAgC;YAC/C,WAAW,GAAG,CAAC,8BAA8B;YAE7C,OAAO,IAAI,SAAS,SAAS,IAAI,EAAE;gBAC/B,QAAQ,SAAS,MAAM;gBACvB,YAAY,SAAS,UAAU;gBAC/B,SAAS;YACb;QACJ,GACC,KAAK,CAAC,CAAC,IAAM,QAAQ,KAAK,CAAC;IAExC;AAEJ,OACI,AAAC,CAAA;IACG,iFAAiF;IACjF,MAAM,MAAM;QACR,gBAAgB,IAAM;QACtB,kBAAkB,IAAM;QACxB,UAAU,IAAM,OAAO,QAAQ,CAAC,MAAM;QACtC,OAAO;QACP,GAAG,OAAO,GAAG;IACjB;IAEA,MAAM,IAAI;IACV,IAAI,IAAI,gBAAgB,MAAM,EAAE,aAAa,IAAI,EAAE,aAAa,CAAC,UAAU,EACvE,EAAE,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC;QAAE,MAAM;IAAa;IAGhE,oGAAoG;IACpG,mHAAmH;IACnH,IAAI,OAAO,mBAAmB,KAAK,SAAS,CAAC,IAAI,cAAc,IAAI;IAEnE,IAAI,CAAC,OAAO,eAAe,EAAE;QACzB,CAAC,IAAI,KAAK,IAAI,QAAQ,GAAG,CAAC;QAC1B;IACJ;IAEA,4EAA4E;IAC5E,IAAI,EAAE,aAAa,EACf,EAAE,aAAa,CAAC,QAAQ,CAAC,OAAO,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,CAC5D,CAAC;QACI,IAAI,KAAK,EAAG,QAAQ,GAAG,CAAC,uCAAuC,aAAa,KAAK;QAElF,aAAa,gBAAgB,CAAC,eAAe;YACzC,CAAC,IAAI,KAAK,IAAI,QAAQ,GAAG,CAAC;YAC1B,IAAI,QAAQ;QAChB;QAEA,mEAAmE;QACnE,IAAI,aAAa,MAAM,IAAI,CAAC,EAAE,aAAa,CAAC,UAAU,EAAE;YACpD,CAAC,IAAI,KAAK,IAAI,QAAQ,GAAG,CAAC;YAC1B,IAAI,QAAQ;QAChB;IACJ,GACA,CAAC;QACG,CAAC,IAAI,KAAK,IAAI,QAAQ,KAAK,CAAC,gDAAgD;IAChF;AAGZ,CAAA","sources":["src/static/games/GameGallery/coi-serviceworker.js"],"sourcesContent":["/*! coi-serviceworker v0.1.6 - Guido Zuidhof, licensed under MIT */\nif (typeof window === 'undefined') {\n    self.addEventListener(\"install\", () => self.skipWaiting());\n    self.addEventListener(\"activate\", (event) => event.waitUntil(self.clients.claim()));\n\n    self.addEventListener(\"message\", (ev) => {\n        if (ev.data && ev.data.type === \"deregister\") {\n            self.registration\n                .unregister()\n                .then(() => {\n                    return self.clients.matchAll();\n                })\n                .then(clients => {\n                    clients.forEach((client) => client.navigate(client.url));\n                });\n        }\n    });\n\n    self.addEventListener(\"fetch\", function (event) {\n        if (event.request.cache === \"only-if-cached\" && event.request.mode !== \"same-origin\") {\n            return;\n        }\n\n        event.respondWith(\n            fetch(event.request)\n                .then((response) => {\n                    if (response.status === 0) {\n                        return response;\n                    }\n\n                    const newHeaders = new Headers(response.headers);\n                    newHeaders.set(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n                    newHeaders.set(\"Cross-Origin-Opener-Policy\", \"same-origin\");\n\n                    return new Response(response.body, {\n                        status: response.status,\n                        statusText: response.statusText,\n                        headers: newHeaders,\n                    });\n                })\n                .catch((e) => console.error(e))\n        );\n    });\n\n} else {\n    (() => {\n        // You can customize the behavior of this script through a global `coi` variable.\n        const coi = {\n            shouldRegister: () => true,\n            shouldDeregister: () => false,\n            doReload: () => window.location.reload(),\n            quiet: false,\n            ...window.coi\n        }\n\n        const n = navigator;\n        if (coi.shouldDeregister() && n.serviceWorker && n.serviceWorker.controller) {\n            n.serviceWorker.controller.postMessage({ type: \"deregister\" });\n        }\n\n        // If we're already coi: do nothing. Perhaps it's due to this script doing its job, or COOP/COEP are\n        // already set from the origin server. Also if the browser has no notion of crossOriginIsolated, just give up here.\n        if (window.crossOriginIsolated !== false || !coi.shouldRegister()) return;\n\n        if (!window.isSecureContext) {\n            !coi.quiet && console.log(\"COOP/COEP Service Worker not registered, a secure context is required.\");\n            return;\n        }\n\n        // In some environments (e.g. Chrome incognito mode) this won't be available\n        if (n.serviceWorker) {\n            n.serviceWorker.register(window.document.currentScript.src).then(\n                (registration) => {\n                    !coi.quiet & console.log(\"COOP/COEP Service Worker registered\", registration.scope);\n\n                    registration.addEventListener(\"updatefound\", () => {\n                        !coi.quiet && console.log(\"Reloading page to make use of updated COOP/COEP Service Worker.\");\n                        coi.doReload()\n                    });\n\n                    // If the registration is active, but it's not controlling the page\n                    if (registration.active && !n.serviceWorker.controller) {\n                        !coi.quiet && console.log(\"Reloading page to make use of COOP/COEP Service Worker.\");\n                        coi.doReload()\n                    }\n                },\n                (err) => {\n                    !coi.quiet && console.error(\"COOP/COEP Service Worker failed to register:\", err);\n                }\n            );\n        }\n    })();\n}\n"],"names":[],"version":3,"file":"index.3f25ce81.js.map","sourceRoot":"/__parcel_source_root/"}